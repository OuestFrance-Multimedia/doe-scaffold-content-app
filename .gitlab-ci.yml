image: docker:20.10

services:
  - docker:20.10-dind

before_script:
  - export PROJECT_NAME=${CI_PROJECT_NAME/content-app-/}

stages:
  - build
  - deploy

build:
  stage: build
  only:
    - tags
  script:
    # Install gcloud sdk
    - apk upgrade && apk add --no-cache curl openssl jq python3
    - curl -s https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz > /tmp/google-cloud-sdk.tar.gz
    - mkdir -p /usr/local/gcloud && tar -C /usr/local/gcloud -xvf /tmp/google-cloud-sdk.tar.gz && /usr/local/gcloud/google-cloud-sdk/install.sh --quiet
    - export PATH=$PATH:/usr/local/gcloud/google-cloud-sdk/bin

    # Configure Docker to use the project registry (Google Artifact Registry)
    - gcloud auth activate-service-account --key-file=${GOOGLE_APPLICATION_CREDENTIALS}
    - gcloud auth configure-docker ${REPOSITORY%%/*} --quiet

    # Build & Push
    - docker build -t $REPOSITORY/${PROJECT_NAME}:$CI_COMMIT_TAG -f build/Dockerfile .
    - docker push $REPOSITORY/${PROJECT_NAME}:$CI_COMMIT_TAG
    - docker images

deploy-dev:
  stage: deploy
  script:
    ## SSH Configuration
    - apk add git
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - cat ${SSH_PRIVATE_KEY} > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan gitlab.com > ~/.ssh/known_hosts
    - ssh -q -T git@gitlab.com

    ## GIT Configuration
    - git config --global user.name $GITLAB_USER_LOGIN
    - git config --global user.email $GITLAB_USER_EMAIL

    ## Clone, commit & push
    - git clone ${SSH_URL_TO_MANIFEST_REPO} && cd "$(basename "$_" .git)"
    - git checkout unrestricted

    - docker run --rm -v ${PWD}:/workdir mikefarah/yq:3.2.1 yq write --inplace values-dev.yaml app_version $CI_COMMIT_TAG
    - docker run --rm -v ${PWD}:/workdir mikefarah/yq:3.2.1 yq write --inplace values.yaml image_name $PROJECT_NAME
    - docker run --rm -v ${PWD}:/workdir mikefarah/yq:3.2.1 yq write --inplace values.yaml repository $REPOSITORY
    - git commit -am "update image dev commit" && git push origin unrestricted

deploy-preprod:
  stage: deploy
  only:
    - tags
  script:
    ## SSH Configuration
    - apk add git
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - cat ${SSH_PRIVATE_KEY} > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan gitlab.com > ~/.ssh/known_hosts
    - ssh -q -T git@gitlab.com

    ## GIT Configuration
    - git config --global user.name $GITLAB_USER_LOGIN
    - git config --global user.email $GITLAB_USER_EMAIL

    ## Clone, commit & push
    - git clone ${SSH_URL_TO_MANIFEST_REPO} && cd "$(basename "$_" .git)"
    - git checkout restricted

    - docker run --rm -v ${PWD}:/workdir mikefarah/yq:3.2.1 yq write --inplace values-preprodn.yaml app_version $CI_COMMIT_TAG
    - docker run --rm -v ${PWD}:/workdir mikefarah/yq:3.2.1 yq write --inplace values.yaml image_name $PROJECT_NAME
    - docker run --rm -v ${PWD}:/workdir mikefarah/yq:3.2.1 yq write --inplace values.yaml repository $REPOSITORY
    - git commit -am "update image preprod tag" && git push origin restricted

deploy-prod:
  stage: deploy
  when: manual
  only:
    - tags
  script:
    ## SSH Configuration
    - apk add git
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - cat ${SSH_PRIVATE_KEY} > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan gitlab.com > ~/.ssh/known_hosts
    - ssh -q -T git@gitlab.com

    ## GIT Configuration
    - git config --global user.name $GITLAB_USER_LOGIN
    - git config --global user.email $GITLAB_USER_EMAIL

    ## Clone, commit & push
    - git clone ${SSH_URL_TO_MANIFEST_REPO} && cd "$(basename "$_" .git)"
    - git checkout restricted

    - docker run --rm -v ${PWD}:/workdir mikefarah/yq:3.2.1 yq write --inplace values-prod.yaml app_version $CI_COMMIT_TAG
    - docker run --rm -v ${PWD}:/workdir mikefarah/yq:3.2.1 yq write --inplace values.yaml image_name $PROJECT_NAME
    - docker run --rm -v ${PWD}:/workdir mikefarah/yq:3.2.1 yq write --inplace values.yaml repository $REPOSITORY
    - git commit -am "update prod image tag" && git push origin restricted

